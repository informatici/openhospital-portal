FROM node:19-alpine as build

ARG ENVIRONMENT_NAME
ARG BASE_DOMAIN

WORKDIR /app

ENV PATH /app/node_modules/.bin:$PATH

COPY package.json ./
COPY package-lock.json ./

RUN npm install

COPY . ./

RUN sed -i "s/develop.ohpp.local\:18080/${ENVIRONMENT_NAME}.${BASE_DOMAIN}/g" src/datajs/DeafutlAllData.tsx
RUN sed -i "s/develop.ohpp.local/${ENVIRONMENT_NAME}.${BASE_DOMAIN}/g" public/index.html

RUN npm run build

FROM nginx:1.23.2-alpine

RUN apk add --no-cache bash gettext

COPY --from=build /app/build /usr/share/nginx/html

COPY docker/nginx.conf.template /etc/nginx/nginx.conf.template
COPY docker/react-static.conf.template /etc/nginx/templates/react-static.conf.template
COPY docker/nginx-conf-template.sh /docker-entrypoint.d/90-nginx-conf-template.sh

RUN rm /etc/nginx/conf.d/default.conf

RUN sed -i 's/\r$//' /docker-entrypoint.d/90-nginx-conf-template.sh

ENV WORKER_CONNECTIONS 1024
ENV WORKER_PROCESSES 2
ENV WORKER_NAME nginx
ENV MONITOR_PORT 8001

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]