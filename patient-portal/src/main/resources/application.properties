# logging.level.root=debug

spring.application.name=oh-patientportal
spring.config.import=optional:file:./resources/application-internal.properties

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)

spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.username=oh-pp
spring.datasource.password=ohpppassword
spring.datasource.url=jdbc:mariadb://mysql:3306/ohpp?createDatabaseIfNotExist=true

### Swagger-UI (info)
api.host=ENVIRONMENT_NAME.BASE_DOMAIN:18080
api.protocol=http

# Whether to enable logging of SQL statements.
spring.jpa.show-sql=true

# Hibernate additional native properties to set on the JPA provider.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
spring.jpa.properties.hibernate.current_session_context_class=thread
spring.jpa.properties.hibernate.format_sql=true

# Fix Postgres JPA Error (Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented).
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Defaults to "create-drop" when using an embedded database and no schema manager was detected. Otherwise, defaults to "none".
#spring.jpa.hibernate.ddl-auto=update

# decomment to update schema
# spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
# spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=sql/migrations/V1__ddljpacreate.sql
# spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata

#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=C:/Users/nicole/eclipse-workspace/git/openhospital-portal/patient-portal/sql/migrations/update.sql

## HikariCP configuration
spring.datasource.hikari.minimumIdle=0
spring.datasource.hikari.maximum-pool-size=40
spring.datasource.hikari.maxLifetime=900000
spring.datasource.hikari.transaction-isolation=TRANSACTION_READ_COMMITTED
spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.data-source-properties.useServerPrepStmts=false
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=500
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=1024

## Web HTTPS settings
server.tomcat.remoteip.remote-ip-header=x-forwarded-for
server.tomcat.remoteip.protocol-header=x-forwarded-proto
 
### Web Gzip
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css
 
## Web static resources versioning
spring.web.resources.chain.strategy.content.enabled=true
spring.web.resources.chain.strategy.content.paths=/js/**,/css/**
 
### Web caching
spring.web.resources.cache.cachecontrol.max-age=30d

# fix ant path matching for springfox
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

#spring.flyway.url=jdbc:mariadb://mysql:3306/ohpp?createDatabaseIfNotExist=true
#spring.flyway.password=ohpppassword
#spring.flyway.user=oh-pp
#spring.flyway.baselineOnMigrate=true
#spring.flyway.check-location=true
spring.flyway.locations=filesystem:sql/migrations
#spring.flyway.schemas=ohpp
spring.flyway.enabled=true
#spring.flyway.baseline-on-migrate: true
#spring.flyway.baseline-version: 0

jwt.header.string=Authorization
jwt.token.prefix=Bearer 
jwt.token.secret=oj6eHNG8jrjyMXiR7Vho7JBvQgG-n2jku5MKbVLoJkL0bImol-hGtk-MVl9s9uwm_4IxHU1iQ8t0G7IseYc8bFrl9F4q6tkvyrlY1zm2doRsA5u1YeSvdMPAFBrr_VEzE4EWzu62RyVBjWWX9TYHTI8G7qIY3GMyFqPXYCVpO05EWCUnJMHZwZbyoSjv5dOhMwIup5bRq001KCpwMt_4Vn8m-CaUPpThNG3HulLbn-y6QKBtFKczgZkK2YLw-nuCy5BorP1BQy88RY9Y1Ho3BjII0iNvyLUF5rUtFeoxn1HA7LiCOuPSCxqkr0_VJEm8lVl6VNAkEnY7Sn3PhYpRTw



