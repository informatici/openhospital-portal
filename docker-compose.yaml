version: "3.8"
services:
  loadbalancer:
    image: traefik:v2.9.1
    restart: unless-stopped
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - "--global.checkNewVersion=true"
      - "--global.sendAnonymousUsage=false"
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:${HTTP_PORT}"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entryPoint.permanent=true"
      - "--entrypoints.websecure.address=:${HTTPS_PORT}"
      - "--entrypoints.ping.address=:8082"
      - "--ping.entryPoint=ping"
      - "--certificatesresolvers.ohppresolver.acme.tlschallenge=true"
      #comment for production
      - "--certificatesresolvers.ohppresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.ohppresolver.acme.email=${CERT_EMAIL}"
      - "--certificatesresolvers.ohppresolver.acme.storage=letsencrypt/acme.json"
    hostname: loadbalancer
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      interval: 5s
      timeout: 3s
      retries: 3
    ports:
      - ${HTTPS_PORT}:${HTTPS_PORT}
      - ${LB_ADMIN_PORT}:8080
      - ${HTTP_PORT}:80
      - ${ADMIN_PORT}:9443
    networks:
      - frontend-net
      - matomo-frontend-net

  mysql:
    image: mariadb:10.6.9
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: "unless-stopped"
    # user: ${UID}:${GID}
    cap_add:
      - SYS_NICE
    labels:
      - app.name=patientportal
      - app.namespace=${ENVIRONMENT_NAME}
      - app.stack=core
      - io.portainer.accesscontrol.teams=developers
    ports:
      - "13306:3306"
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized", "--innodb_buffer_pool_loaded"]
      interval: 5s
      start_period: 2s
      timeout: 2s
      retries: 10
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_logs:/var/log/mysql
    environment:
      MARIADB_MYSQL_LOCALHOST_USER: "true"
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
    networks:
      - backend-net

  api-base:
    image: ${IMAGES_REPO}/ohpp-api:${PATIENTPORTAL_VERSION}
    restart: "no"
    labels:
      - app.name=patientportal
      - app.namespace=${ENVIRONMENT_NAME}
      - app.stack=core
      - io.portainer.accesscontrol.teams=developers
    networks:
      - backend-net
    volumes:
      - sql_files:/app/sql

  api:
    extends:
      service: api-base
    restart: "unless-stopped"
    networks:
      - frontend-net
      - backend-net
    ports:
      - 18080:8080
    labels:
      - app.name=patientportal
      - traefik.enable=true
      - traefik.docker.network=ohpp-net-${ENVIRONMENT_NAME}
      - traefik.http.routers.patientportal-api-${ENVIRONMENT_NAME}.rule=Host(`${ENVIRONMENT_NAME}.${BASE_DOMAIN}` && PathPrefix(`/api`)
      - traefik.http.routers.patientportal-api-${ENVIRONMENT_NAME}.entrypoints=websecure
      - traefik.http.routers.patientportal-api-${ENVIRONMENT_NAME}.tls=true
      - traefik.http.routers.patientportal-api-${ENVIRONMENT_NAME}.tls.certresolver=ohppresolver
      - traefik.http.routers.patientportal-api-${ENVIRONMENT_NAME}.priority=10
      - traefik.http.routers.patientportal-api-${ENVIRONMENT_NAME}.service=patientportal-api-${ENVIRONMENT_NAME}
      - traefik.http.services.patientportal-api-${ENVIRONMENT_NAME}.loadbalancer.server.port=8080
      - traefik.http.services.patientportal-api-${ENVIRONMENT_NAME}.loadbalancer.passhostheader=true
      - traefik.http.services.patientportal-api-${ENVIRONMENT_NAME}.loadbalancer.healthcheck.path=/
      - traefik.http.services.patientportal-api-${ENVIRONMENT_NAME}.loadbalancer.healthcheck.interval=5000ms
      - traefik.http.services.patientportal-api-${ENVIRONMENT_NAME}.loadbalancer.healthcheck.timeout=2000ms
      - traefik.http.services.patientportal-api-${ENVIRONMENT_NAME}.loadbalancer.healthcheck.scheme=http
    # command: ["java", "-jar", "patientportal-0.0.1-SNAPSHOT.jar", "--spring.profiles.active=init"]
    # volumes:
    #   - ./resources/application.properties:/app/resources/application.properties
    # healthcheck:
    #   test: ["CMD", "docker-healthcheck"]
    #   interval: 5s
    #   timeout: 5s
    #   start_period: 5s
    #   retries: 3
    
  ui:
    image: ${IMAGES_REPO}/ohpp-ui:${PATIENTPORTAL_VERSION}
    build:
      context: ./patient-portal-ui
      dockerfile: Dockerfile-release
    restart: "unless-stopped"
    volumes:
      - http_logs:/var/log/nginx/host
      - pids:/var/run
    environment:
      WORKER_PROCESSES: ${NGINX_WORKER_PROCESSES}
      WORKER_CONNECTIONS: ${NGINX_WORKER_CONNECTIONS}
    labels:
      - app.name=patientportal
      - traefik.enable=true
      - traefik.docker.network=ohpp-net-${ENVIRONMENT_NAME}
      - traefik.http.routers.patientportal-${ENVIRONMENT_NAME}.rule=Host(`${ENVIRONMENT_NAME}.${BASE_DOMAIN}`)
      - traefik.http.routers.patientportal-${ENVIRONMENT_NAME}.entrypoints=websecure
      - traefik.http.routers.patientportal-${ENVIRONMENT_NAME}.tls=true
      - traefik.http.routers.patientportal-${ENVIRONMENT_NAME}.tls.certresolver=ohppresolver
      - traefik.http.routers.patientportal-${ENVIRONMENT_NAME}.priority=10
      - traefik.http.routers.patientportal-${ENVIRONMENT_NAME}.service=patientportal-${ENVIRONMENT_NAME}
      - traefik.http.services.patientportal-${ENVIRONMENT_NAME}.loadbalancer.server.port=80
      - traefik.http.services.patientportal-${ENVIRONMENT_NAME}.loadbalancer.passhostheader=true
      - traefik.http.services.patientportal-${ENVIRONMENT_NAME}.loadbalancer.healthcheck.path=/
      - traefik.http.services.patientportal-${ENVIRONMENT_NAME}.loadbalancer.healthcheck.interval=5000ms
      - traefik.http.services.patientportal-${ENVIRONMENT_NAME}.loadbalancer.healthcheck.timeout=2000ms
      - traefik.http.services.patientportal-${ENVIRONMENT_NAME}.loadbalancer.healthcheck.scheme=http
    healthcheck:
      test: ["CMD", "curl", "-H", "Host: ${ENVIRONMENT_NAME}.${BASE_DOMAIN}", "--fail", "http://127.0.0.1/"]
      interval: 5s
      timeout: 5s
      start_period: 5s
      retries: 3
    ulimits:
      nproc: 655353
      nofile:
        soft: 1048576
        hard: 1048576
    networks:
      - frontend-net
      - backend-net

volumes:
  mysql_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${DATA_SHARED}/${ENVIRONMENT_NAME}/database

  sql_files:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${DATA_SHARED}/${ENVIRONMENT_NAME}/sql

  http_logs:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${DATA_SHARED}/${ENVIRONMENT_NAME}/logs/nginx

  mysql_logs:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${DATA_SHARED}/${ENVIRONMENT_NAME}/logs/mysql

  pids:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${DATA_SHARED}/${ENVIRONMENT_NAME}/run
      
  letsencrypt:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${DATA_SHARED}/${ENVIRONMENT_NAME}/letsencrypt

networks:
  frontend-net:
    name: ohpp-net-${ENVIRONMENT_NAME}
    driver: bridge 
    #external: true

  backend-net:
    driver: bridge 
    # driver_opts:
    #   com.docker.network.driver.mtu: 1460

  matomo-frontend-net:
    name: patientportal-matomo-net-${ENVIRONMENT_NAME}
    driver: bridge 
    #external: true

